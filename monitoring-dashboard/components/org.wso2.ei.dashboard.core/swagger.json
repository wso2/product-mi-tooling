{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Cluster Aware MI Dashboard",
    "description" : "This is to retrieve details from the rest api to the UI.",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/a2294/MI_Dashboard/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "login",
    "description" : "Login Management"
  }, {
    "name" : "logout",
    "description" : "Logout Management"
  }, {
    "name" : "heartbeat",
    "description" : "Heartbeat Management"
  }, {
    "name" : "groups",
    "description" : "Access group list"
  }, {
    "name" : "nodes",
    "description" : "Access nodes details"
  }, {
    "name" : "proxyServices",
    "description" : "Access proxy services details"
  }, {
    "name" : "endpoints",
    "description" : "Access endpoints details"
  }, {
    "name" : "inboundEndpoints",
    "description" : "Access inbound endpoints details"
  }, {
    "name" : "messageProcessors",
    "description" : "Access message processors details"
  }, {
    "name" : "messageStores",
    "description" : "Access message stores details"
  }, {
    "name" : "apis",
    "description" : "Access APIs details"
  }, {
    "name" : "templates",
    "description" : "Access templates details"
  }, {
    "name" : "sequences",
    "description" : "Access sequences details"
  }, {
    "name" : "tasks",
    "description" : "Access tasks details"
  }, {
    "name" : "localEntries",
    "description" : "Access local entries details"
  }, {
    "name" : "data-services",
    "description" : "Access data services details"
  }, {
    "name" : "datasources",
    "description" : "Access datasources details"
  }, {
    "name" : "connectors",
    "description" : "Access connectors details"
  }, {
    "name" : "carbonApplications",
    "description" : "Access carbon applications details"
  }, {
    "name" : "logFiles",
    "description" : "Access log files details"
  }, {
    "name" : "logConfigs",
    "description" : "Access log configs details"
  }, {
    "name" : "Users",
    "description" : "Access users details"
  }, {
    "name" : "configuration",
    "description" : "Access configurations"
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "login" ],
        "summary" : "Receive logins to the dashboard",
        "operationId" : "ReceiveLogin",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Login"
        },
        "responses" : {
          "200" : {
            "description" : "Login successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/logout" : {
      "get" : {
        "tags" : [ "logout" ],
        "summary" : "Receive logouts to the dashboard",
        "operationId" : "ReceiveLogout",
        "responses" : {
          "200" : {
            "description" : "Logout successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/heartbeat" : {
      "post" : {
        "tags" : [ "heartbeat" ],
        "summary" : "Receive heartbeats from nodes",
        "operationId" : "ReceiveNodeHeartbeat",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Heartbeat"
        },
        "responses" : {
          "200" : {
            "description" : "Receive node heartbeats",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Get set of groups",
        "operationId" : "RetrieveGroups",
        "responses" : {
          "200" : {
            "description" : "The list of groups registered to dashboard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupList"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/nodes" : {
      "get" : {
        "tags" : [ "nodes" ],
        "summary" : "Get set of nodes in the group",
        "operationId" : "RetrieveNodesByGroupId",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of nodes in group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeList"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/proxy-services" : {
      "get" : {
        "tags" : [ "proxyServices" ],
        "summary" : "Get proxy services by node ids",
        "operationId" : "getProxyServicesByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of proxy services deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "proxyServices" ],
        "summary" : "Update proxy service",
        "operationId" : "updateProxyService",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ArtifactUpdate"
        },
        "responses" : {
          "200" : {
            "description" : "Proxy update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/endpoints" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "summary" : "Get endpoints by node ids",
        "operationId" : "getEndpointsByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of endpoints deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "endpoints" ],
        "summary" : "Update endpoint",
        "operationId" : "updateEndpoint",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ArtifactUpdate"
        },
        "responses" : {
          "200" : {
            "description" : "Endpoint update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/inbound-endpoints" : {
      "get" : {
        "tags" : [ "inboundEndpoints" ],
        "summary" : "Get inbound endpoints by node ids",
        "operationId" : "getInboundEpsByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of inbound endpoints deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "inboundEndpoints" ],
        "summary" : "Update inbound endpoint",
        "operationId" : "updateInboundEp",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ArtifactUpdate"
        },
        "responses" : {
          "200" : {
            "description" : "Inbound endpoint update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/message-processors" : {
      "get" : {
        "tags" : [ "messageProcessors" ],
        "summary" : "Get message processors by node ids",
        "operationId" : "getMessageProcessorsByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of message processorss deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "messageProcessors" ],
        "summary" : "Update message processor",
        "operationId" : "updateMessageProcessor",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ArtifactUpdate"
        },
        "responses" : {
          "200" : {
            "description" : "Message processor update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/message-stores" : {
      "get" : {
        "tags" : [ "messageStores" ],
        "summary" : "Get message stores by node ids",
        "operationId" : "getMessageStoresByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of message stores deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/apis" : {
      "get" : {
        "tags" : [ "apis" ],
        "summary" : "Get APIs by node ids",
        "operationId" : "getApisByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of APIs deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "apis" ],
        "summary" : "Update API",
        "operationId" : "updateApi",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ArtifactUpdate"
        },
        "responses" : {
          "200" : {
            "description" : "API update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/templates" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Get templates by node ids",
        "operationId" : "getTemplatesByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of templates deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/sequences" : {
      "get" : {
        "tags" : [ "sequences" ],
        "summary" : "Get sequences by node ids",
        "operationId" : "getSequencesByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of sequences deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "sequences" ],
        "summary" : "Update sequence",
        "operationId" : "updateSequence",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ArtifactUpdate"
        },
        "responses" : {
          "200" : {
            "description" : "Sequence update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ack"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/tasks" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get tasks by node ids",
        "operationId" : "getTasksByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of tasks deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/local-entries" : {
      "get" : {
        "tags" : [ "localEntries" ],
        "summary" : "Get local entries by node ids",
        "operationId" : "getLocalEntriesByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of local entries deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/nodes/{node-id}/local-entries/{local-entry}/value" : {
      "get" : {
        "tags" : [ "localEntries" ],
        "summary" : "Get value of local entry",
        "operationId" : "getLocalEntryValue",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "node-id",
          "in" : "path",
          "description" : "Node id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "local-entry",
          "in" : "path",
          "description" : "Local entry name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Value of the local entry",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocalEntryValue"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/data-services" : {
      "get" : {
        "tags" : [ "data-services" ],
        "summary" : "Get data-services by node ids",
        "operationId" : "getDataServicesByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of data-services deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/datasources" : {
      "get" : {
        "tags" : [ "datasources" ],
        "summary" : "Get datasources by node ids",
        "operationId" : "getDatasourcesByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of datsources deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatasourceList"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/connectors" : {
      "get" : {
        "tags" : [ "connectors" ],
        "summary" : "Get connectors by node ids",
        "operationId" : "getConnectorsByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of connectors deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/capps" : {
      "get" : {
        "tags" : [ "carbonApplications" ],
        "summary" : "Get carbon applications by node ids",
        "operationId" : "getCarbonApplicationsByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of carbon applications deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/nodes/{node-id}/capps/{capp-name}/artifacts" : {
      "get" : {
        "tags" : [ "carbonApplications" ],
        "summary" : "Get artifact list of carbon application by node id",
        "operationId" : "getCarbonApplicationArtifactsByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "node-id",
          "in" : "path",
          "description" : "Node ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "capp-name",
          "in" : "path",
          "description" : "Carbon application name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of artifacts in carbon applications deployed in provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CAppArtifacts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/logs" : {
      "get" : {
        "tags" : [ "logFiles" ],
        "summary" : "Get log files by node ids",
        "operationId" : "getLogFilesByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodes",
          "in" : "query",
          "description" : "ID/IDs of the nodes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "all"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of log files of provided nodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogList"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/nodes/{node-id}/logs/{file-name}" : {
      "get" : {
        "tags" : [ "logFiles" ],
        "summary" : "Get log content",
        "operationId" : "getLogContent",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "file-name",
          "in" : "path",
          "description" : "Log file name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "node-id",
          "in" : "path",
          "description" : "Node id of the file",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get log file content.",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/log-configs/nodes/{node-id}" : {
      "get" : {
        "tags" : [ "logConfigs" ],
        "summary" : "Get log configs by node id",
        "operationId" : "getLogConfigsByNodeIds",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "node-id",
          "in" : "path",
          "description" : "NodeId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of log configs in provided node id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogConfigs"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "logConfigs" ],
        "summary" : "Update log level by nodeId",
        "operationId" : "updateLogLevelByNodeId",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "node-id",
          "in" : "path",
          "description" : "NodeId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateLogger"
        },
        "responses" : {
          "200" : {
            "description" : "Logger update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/log-configs" : {
      "get" : {
        "tags" : [ "logConfigs" ],
        "summary" : "Get log configs",
        "operationId" : "getLogConfigs",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of log configs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogConfigs"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "logConfigs" ],
        "summary" : "Add logger",
        "operationId" : "addLogger",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AddLogger"
        },
        "responses" : {
          "200" : {
            "description" : "Logger insert status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "logConfigs" ],
        "summary" : "Update log level",
        "operationId" : "updateLogLevel",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateLogger"
        },
        "responses" : {
          "200" : {
            "description" : "Logger update status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get users",
        "operationId" : "getUsers",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Add user",
        "operationId" : "addUser",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID of the node",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AddUser"
        },
        "responses" : {
          "200" : {
            "description" : "User insert status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/users/{user-id}" : {
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete user",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "group-id",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user-id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User deletion status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/configuration" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Get configurations using management api",
        "operationId" : "RetrieveConfiguration",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "query",
          "description" : "Group id of the node",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "query",
          "description" : "Node id of the node",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactType",
          "in" : "query",
          "description" : "Type of the artifact",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactName",
          "in" : "query",
          "description" : "Name of the artifact",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The configuration of the relevant artifact",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Configuration"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/healthz" : {
      "get" : {
        "tags" : [ "healthz" ],
        "summary" : "Get health check for the dashboard",
        "operationId" : "RetrieveHealth",
        "responses" : {
          "200" : {
            "description" : "Health check status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/healthz"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "LoginRequest" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        },
        "example" : {
          "username" : "admin",
          "password" : "admin"
        }
      },
      "HeartbeatRequest" : {
        "type" : "object",
        "properties" : {
          "product" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "nodeId" : {
            "type" : "string"
          },
          "interval" : {
            "type" : "integer"
          },
          "mgtApiUrl" : {
            "type" : "string"
          },
          "changeNotification" : {
            "$ref" : "#/components/schemas/HeartbeatRequest_changeNotification"
          }
        },
        "example" : {
          "type" : "mi",
          "groupId" : "mi_dev",
          "nodeId" : "node_01",
          "interval" : 30,
          "mgtApiUrl" : "https://10.100.0.64:9164/management/"
        }
      },
      "UpdatedArtifact" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "Ack" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "example" : {
          "status" : "success",
          "message" : "Successfully updated"
        }
      },
      "GroupList" : {
        "type" : "array",
        "example" : [ "group_01", "group_02" ],
        "items" : {
          "type" : "string"
        }
      },
      "NodeList" : {
        "type" : "array",
        "example" : [ {
          "nodeId" : "node_01",
          "details" : {
            "\\\"productVersion\\\":\\\"1.2.0\\\"" : null,
            "\\\"osVersion\\\":\\\"10.15.7\\\"" : null,
            "\\\"javaVersion\\\":\\\"1.8.0_191\\\"" : null
          }
        } ],
        "items" : {
          "$ref" : "#/components/schemas/NodeList_inner"
        }
      },
      "ArtifactDetails" : {
        "type" : "object",
        "properties" : {
          "nodeId" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          }
        }
      },
      "Artifacts" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Artifacts_inner"
        }
      },
      "CAppArtifacts" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CAppArtifacts_inner"
        }
      },
      "ArtifactUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "artifactName" : {
            "type" : "string"
          },
          "nodeId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "boolean"
          }
        }
      },
      "DatasourceList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DatasourceList_inner"
        }
      },
      "LogList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/LogList_inner"
        }
      },
      "LogDetail" : {
        "type" : "object",
        "properties" : {
          "nodeId" : {
            "type" : "string"
          },
          "logSize" : {
            "type" : "string"
          }
        }
      },
      "LogConfigs" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/LogConfigs_inner"
        }
      },
      "LogConfigAddRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "loggerClass" : {
            "type" : "string"
          },
          "level" : {
            "type" : "string"
          }
        }
      },
      "LogConfigUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "level" : {
            "type" : "string"
          }
        }
      },
      "Users" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Users_inner"
        }
      },
      "AddUserRequest" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "isAdmin" : {
            "type" : "boolean"
          }
        }
      },
      "KeyValue" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "KeyValueAsArray" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Configuration" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          }
        }
      },
      "healthz" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          }
        }
      },
      "LocalEntryValue" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          }
        }
      },
      "SuccessStatus" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "Success status"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        },
        "example" : {
          "code" : 500,
          "message" : "Internal server error"
        }
      },
      "UnauthorizedError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        },
        "example" : {
          "code" : 401,
          "message" : "Unauthorized"
        }
      },
      "Token" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer"
          }
        },
        "example" : {
          "access_token" : "2YotnFZFEjr1zCsicMWpAA",
          "expires_in" : 3600
        }
      },
      "HeartbeatRequest_changeNotification" : {
        "type" : "object",
        "properties" : {
          "deployedArtifacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdatedArtifact"
            }
          },
          "undeployedArtifacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdatedArtifact"
            }
          }
        }
      },
      "NodeList_inner" : {
        "type" : "object",
        "properties" : {
          "nodeId" : {
            "type" : "string",
            "description" : "node id."
          },
          "status" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string",
            "description" : "String contains role, upTime, serverName, serverVersion, miHome, javaHome, javaVersion, javaVendor, osName"
          }
        }
      },
      "Artifacts_inner" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "nodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactDetails"
            }
          }
        }
      },
      "CAppArtifacts_inner" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "DatasourceList_inner" : {
        "type" : "object",
        "properties" : {
          "datasourceName" : {
            "type" : "string"
          },
          "nodes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "nodeId" : {
                  "type" : "string"
                },
                "details" : {
                  "type" : "array",
                  "description" : "Array contains type, status, description, datsource provider, database engine, driver, url, username etc",
                  "items" : {
                    "$ref" : "#/components/schemas/KeyValue"
                  }
                },
                "configParameters" : {
                  "type" : "array",
                  "description" : "Array contains default auto commit, default read only, test on borrow, test on return, test while idle etc.",
                  "items" : {
                    "$ref" : "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      },
      "LogList_inner" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "nodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LogDetail"
            }
          }
        }
      },
      "LogConfigs_inner" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "componentName" : {
            "type" : "string"
          },
          "level" : {
            "type" : "string"
          }
        }
      },
      "Users_inner" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          }
        }
      }
    },
    "requestBodies" : {
      "Login" : {
        "description" : "The request body to login.",
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "$ref" : "#/components/schemas/LoginRequest"
            }
          }
        }
      },
      "Heartbeat" : {
        "description" : "The request body to update proxy.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HeartbeatRequest"
            }
          }
        }
      },
      "ArtifactUpdate" : {
        "description" : "The request body to update artifact.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ArtifactUpdateRequest"
            }
          }
        }
      },
      "AddLogger" : {
        "description" : "The request body to add logger.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LogConfigAddRequest"
            }
          }
        }
      },
      "UpdateLogger" : {
        "description" : "The request body to add logger.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LogConfigUpdateRequest"
            }
          }
        }
      },
      "AddUser" : {
        "description" : "The request body to add user.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AddUserRequest"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}